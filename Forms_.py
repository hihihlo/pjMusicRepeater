# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0 on Fri Nov 29 17:15:20 2024
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
from infSetting import *
from utilMisc import *
_ = SetTransLID('ListenRepeater', localedir='locale', languages=[None])
import wx.html2
import GuiPreDef
import wx.html
from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg as FigureCanvas
import wx.lib.buttons as Buttons
# end wxGlade


class FmMain(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: FmMain.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1213, 928))
        self.SetTitle(_("Music Repeater"))

        # Menu Bar
        self.fmMain_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, _("&Open"), "")
        self.Bind(wx.EVT_MENU, self.mnFileOpen, item)
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(wx.ID_ANY, _("tmpM"), "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Recent F&iles"), wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Recent Fol&ders"), "")
        item = wxglade_tmp_menu.Append(wx.ID_ANY, _("&Next File in folder"), "")
        self.Bind(wx.EVT_MENU, self.mnNextFile, item)
        self.fmMain_menubar.Append(wxglade_tmp_menu, _("&File"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu_sub = wx.Menu()
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, _("set &All sntes (by def mainSnte/SubSnte/CopySnte)"), "")
        self.Bind(wx.EVT_MENU, self.mnSetSnte_all, item)
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, _("set &MainSntes"), "")
        self.Bind(wx.EVT_MENU, self.mnSetSnte_MainSntes, item)
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, _("set &SubSntes"), "")
        self.Bind(wx.EVT_MENU, self.mnSetSnte_SubSntes, item)
        item = wxglade_tmp_menu_sub.Append(wx.ID_ANY, _("set &CopySntes"), "")
        self.Bind(wx.EVT_MENU, self.mnSetSnte_CopySntes, item)
        wxglade_tmp_menu.Append(wx.ID_ANY, _("set sntes to current &def setting..."), wxglade_tmp_menu_sub, "")
        self.fmMain_menubar.Append(wxglade_tmp_menu, _("&Batch change"))
        self.SetMenuBar(self.fmMain_menubar)
        # Menu Bar end

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.panelWave = wx.Panel(self.panel_1, wx.ID_ANY)
        self.panelWave.SetBackgroundColour(wx.Colour(0, 0, 0))
        sizer_1.Add(self.panelWave, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)

        sizer_4 = wx.GridSizer(2, 1, 0, 0)

        self.panel_5 = wx.Panel(self.panelWave, wx.ID_ANY)
        self.panel_5.SetBackgroundColour(wx.Colour(219, 112, 147))
        sizer_4.Add(self.panel_5, 0, wx.EXPAND, 0)

        sizer_17 = wx.BoxSizer(wx.HORIZONTAL)

        self.canvasWide = FigureCanvas(self.panel_5, wx.ID_ANY)
        self.canvasWide.SetBackgroundColour(wx.Colour(0, 0, 0))
        sizer_17.Add(self.canvasWide, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)

        self.panel_6 = wx.Panel(self.panelWave, wx.ID_ANY)
        self.panel_6.SetBackgroundColour(wx.Colour(143, 188, 143))
        sizer_4.Add(self.panel_6, 0, wx.EXPAND, 0)

        sizer_18 = wx.BoxSizer(wx.HORIZONTAL)

        self.canvasNarr = FigureCanvas(self.panel_6, wx.ID_ANY)
        self.canvasNarr.SetForegroundColour(wx.Colour(0, 0, 0))
        sizer_18.Add(self.canvasNarr, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)

        self.panelDown = wx.Panel(self.panel_1, wx.ID_ANY)
        self.panelDown.SetBackgroundColour(wx.Colour(192, 192, 192))
        sizer_1.Add(self.panelDown, 5, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.panel_2 = wx.Panel(self.panelDown, wx.ID_ANY, style=wx.BORDER_SUNKEN)
        sizer_2.Add(self.panel_2, 0, wx.EXPAND, 0)

        sizer_3 = wx.FlexGridSizer(1, 20, 0, 0)

        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(sizer_10, 1, wx.EXPAND, 0)

        self.btnPlay = wx.ToggleButton(self.panel_2, wx.ID_ANY, _("Play(ing)"))
        sizer_10.Add(self.btnPlay, 0, 0, 0)

        self.edCurPos = wx.TextCtrl(self.panel_2, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.edCurPos.SetMinSize((80, 23))
        self.edCurPos.Enable(False)
        sizer_10.Add(self.edCurPos, 0, 0, 0)

        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_3.Add(sizer_11, 1, wx.EXPAND, 0)

        label_6 = wx.StaticText(self.panel_2, wx.ID_ANY, _("cur Cnt"))
        sizer_11.Add(label_6, 0, 0, 0)

        self.edCurCnt = wx.TextCtrl(self.panel_2, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.edCurCnt.SetMinSize((60, 23))
        self.edCurCnt.Enable(False)
        sizer_11.Add(self.edCurCnt, 0, 0, 0)

        sizer_12 = wx.StaticBoxSizer(wx.StaticBox(self.panel_2, wx.ID_ANY, _("defMain")), wx.HORIZONTAL)
        sizer_3.Add(sizer_12, 1, 0, 0)

        bitmap_1 = wx.StaticBitmap(sizer_12.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/count.png", wx.BITMAP_TYPE_ANY))
        bitmap_1.SetMinSize((25, 25))
        sizer_12.Add(bitmap_1, 0, 0, 0)

        self.edDefSn_MainCnt = wx.TextCtrl(sizer_12.GetStaticBox(), wx.ID_ANY, _("0"))
        self.edDefSn_MainCnt.SetMinSize((35, 25))
        self.edDefSn_MainCnt.SetFont(wx.Font(13, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_12.Add(self.edDefSn_MainCnt, 0, 0, 0)

        bitmap_2 = wx.StaticBitmap(sizer_12.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/speed.png", wx.BITMAP_TYPE_ANY))
        bitmap_2.SetMinSize((25, 25))
        sizer_12.Add(bitmap_2, 0, 0, 0)

        self.cboDefSn_MainSpeed = wx.ComboBox(sizer_12.GetStaticBox(), wx.ID_ANY, choices=[_("50%"), _("60%"), _("65%"), _("75%"), _("100%"), _("125%"), _("150%"), _("175%")], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.cboDefSn_MainSpeed.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        self.cboDefSn_MainSpeed.SetSelection(2)
        sizer_12.Add(self.cboDefSn_MainSpeed, 0, 0, 0)

        sizer_14 = wx.StaticBoxSizer(wx.StaticBox(self.panel_2, wx.ID_ANY, _("defSub")), wx.HORIZONTAL)
        sizer_3.Add(sizer_14, 1, 0, 0)

        bitmap_3 = wx.StaticBitmap(sizer_14.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/count.png", wx.BITMAP_TYPE_ANY))
        bitmap_3.SetMinSize((25, 25))
        sizer_14.Add(bitmap_3, 0, 0, 0)

        self.edDefSn_SubCnt = wx.TextCtrl(sizer_14.GetStaticBox(), wx.ID_ANY, _("0"))
        self.edDefSn_SubCnt.SetMinSize((35, 25))
        self.edDefSn_SubCnt.SetFont(wx.Font(13, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_14.Add(self.edDefSn_SubCnt, 0, 0, 0)

        bitmap_4 = wx.StaticBitmap(sizer_14.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/speed.png", wx.BITMAP_TYPE_ANY))
        bitmap_4.SetMinSize((25, 25))
        sizer_14.Add(bitmap_4, 0, 0, 0)

        self.cboDefSn_SubSpeed = wx.ComboBox(sizer_14.GetStaticBox(), wx.ID_ANY, choices=[_("50%"), _("60%"), _("65%"), _("75%"), _("100%"), _("125%"), _("150%"), _("175%")], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.cboDefSn_SubSpeed.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        self.cboDefSn_SubSpeed.SetSelection(2)
        sizer_14.Add(self.cboDefSn_SubSpeed, 0, 0, 0)

        sizer_16 = wx.StaticBoxSizer(wx.StaticBox(self.panel_2, wx.ID_ANY, _("defCopy")), wx.HORIZONTAL)
        sizer_3.Add(sizer_16, 1, 0, 0)

        bitmap_7 = wx.StaticBitmap(sizer_16.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/count.png", wx.BITMAP_TYPE_ANY))
        bitmap_7.SetMinSize((25, 25))
        sizer_16.Add(bitmap_7, 0, 0, 0)

        self.edDefSn_CopyCnt = wx.TextCtrl(sizer_16.GetStaticBox(), wx.ID_ANY, _("0"))
        self.edDefSn_CopyCnt.SetMinSize((35, 25))
        self.edDefSn_CopyCnt.SetFont(wx.Font(13, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_16.Add(self.edDefSn_CopyCnt, 0, 0, 0)

        bitmap_8 = wx.StaticBitmap(sizer_16.GetStaticBox(), wx.ID_ANY, wx.Bitmap("./icons/speed.png", wx.BITMAP_TYPE_ANY))
        bitmap_8.SetMinSize((25, 25))
        sizer_16.Add(bitmap_8, 0, 0, 0)

        self.cboDefSn_CopySpeed = wx.ComboBox(sizer_16.GetStaticBox(), wx.ID_ANY, choices=[_("50%"), _("60%"), _("65%"), _("75%"), _("100%"), _("125%"), _("150%"), _("175%")], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        self.cboDefSn_CopySpeed.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        self.cboDefSn_CopySpeed.SetSelection(2)
        sizer_16.Add(self.cboDefSn_CopySpeed, 0, 0, 0)

        sizer_7 = wx.GridSizer(2, 1, 1, 0)
        sizer_3.Add(sizer_7, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)

        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)

        bitmap_5 = wx.StaticBitmap(self.panel_2, wx.ID_ANY, wx.Bitmap("C:\\DriveD\\MyPro\\DataProc\\Parser_Script\\Python\\+media\\+voice\\pjMusicRepeater\\icons\\AppVol.png", wx.BITMAP_TYPE_ANY))
        sizer_8.Add(bitmap_5, 0, 0, 0)

        self.slider_AppVol = wx.Slider(self.panel_2, wx.ID_ANY, 20, 0, 100, style=wx.SL_HORIZONTAL | wx.SL_LABELS)
        self.slider_AppVol.SetMinSize((130, 37))
        self.slider_AppVol.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_8.Add(self.slider_AppVol, 0, wx.EXPAND, 0)

        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7.Add(sizer_9, 1, wx.EXPAND, 0)

        bitmap_6 = wx.StaticBitmap(self.panel_2, wx.ID_ANY, wx.Bitmap("C:\\DriveD\\MyPro\\DataProc\\Parser_Script\\Python\\+media\\+voice\\pjMusicRepeater\\icons\\SysVol.png", wx.BITMAP_TYPE_ANY))
        sizer_9.Add(bitmap_6, 0, wx.EXPAND, 0)

        self.slider_SysVol = wx.Slider(self.panel_2, wx.ID_ANY, 20, 0, 100, style=wx.SL_HORIZONTAL | wx.SL_LABELS)
        self.slider_SysVol.SetMinSize((130, 37))
        self.slider_SysVol.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        sizer_9.Add(self.slider_SysVol, 0, wx.EXPAND, 0)

        sizer_3.Add((12, 20), 0, 0, 0)

        sizer_3.Add((7, 20), 0, 0, 0)

        sizer_3.Add((12, 20), 0, 0, 0)

        sizer_3.Add((10, 16), 0, 0, 0)

        sizer_15 = wx.StaticBoxSizer(wx.StaticBox(self.panel_2, wx.ID_ANY, ""), wx.VERTICAL)
        sizer_3.Add(sizer_15, 1, wx.EXPAND, 0)

        label_5 = wx.StaticText(sizer_15.GetStaticBox(), wx.ID_ANY, _("EndMode: "))
        sizer_15.Add(label_5, 0, 0, 0)

        self.cbo_EndMode = wx.ComboBox(sizer_15.GetStaticBox(), wx.ID_ANY, choices=[_("Stop"), _("Next"), _("RepNum"), _("RepForEver")], style=wx.CB_DROPDOWN | wx.CB_READONLY)
        sizer_15.Add(self.cbo_EndMode, 0, 0, 0)

        sizer_3.Add((0, 0), 0, 0, 0)

        sizer_3.Add((0, 0), 0, 0, 0)

        self.panel_test = wx.Panel(self.panelDown, wx.ID_ANY)
        sizer_2.Add(self.panel_test, 0, wx.EXPAND, 0)

        sizer_5 = wx.FlexGridSizer(1, 12, 0, 0)

        label_1 = wx.StaticText(self.panel_test, wx.ID_ANY, _("left"))
        sizer_5.Add(label_1, 0, 0, 0)

        self.edLeft = wx.TextCtrl(self.panel_test, wx.ID_ANY, "")
        sizer_5.Add(self.edLeft, 0, 0, 0)

        label_2 = wx.StaticText(self.panel_test, wx.ID_ANY, _("right"))
        sizer_5.Add(label_2, 0, 0, 0)

        self.edRight = wx.TextCtrl(self.panel_test, wx.ID_ANY, "")
        sizer_5.Add(self.edRight, 0, 0, 0)

        label_3 = wx.StaticText(self.panel_test, wx.ID_ANY, _("top"))
        sizer_5.Add(label_3, 0, 0, 0)

        self.edTop = wx.TextCtrl(self.panel_test, wx.ID_ANY, "")
        sizer_5.Add(self.edTop, 0, 0, 0)

        label_4 = wx.StaticText(self.panel_test, wx.ID_ANY, _("bottom"))
        sizer_5.Add(label_4, 0, 0, 0)

        self.edBottom = wx.TextCtrl(self.panel_test, wx.ID_ANY, "")
        sizer_5.Add(self.edBottom, 0, 0, 0)

        self.panelMsg = wx.Panel(self.panelDown, wx.ID_ANY, style=wx.BORDER_STATIC)
        self.panelMsg.SetBackgroundColour(wx.Colour(255, 127, 0))
        sizer_2.Add(self.panelMsg, 0, wx.EXPAND, 0)

        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)

        self.zHtml_TopTip = wx.html.HtmlWindow(self.panelMsg, wx.ID_ANY)
        self.zHtml_TopTip.Hide()
        sizer_13.Add(self.zHtml_TopTip, 1, wx.EXPAND, 0)

        self.ztxtMsg = wx.StaticText(self.panelMsg, wx.ID_ANY, "")
        self.ztxtMsg.SetBackgroundColour(wx.Colour(255, 0, 0))
        self.ztxtMsg.SetForegroundColour(wx.Colour(255, 255, 255))
        self.ztxtMsg.SetFont(wx.Font(14, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        self.ztxtMsg.Hide()
        sizer_13.Add(self.ztxtMsg, 1, wx.EXPAND, 0)

        self.panel_zlRep = wx.Panel(self.panelDown, wx.ID_ANY)
        sizer_2.Add(self.panel_zlRep, 5, wx.EXPAND, 0)

        self.sizer_zlRep = wx.BoxSizer(wx.VERTICAL)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_zlRep.Add(sizer_6, 3, wx.EXPAND, 0)

        self.zlRep = GuiPreDef.ULC.UltimateListCtrl(self.panel_zlRep, agwStyle = GuiPreDef.agwStyle)
        self.zlRep.SetFocus()
        sizer_6.Add(self.zlRep, 6, wx.EXPAND, 0)

        sizer_19 = wx.BoxSizer(wx.VERTICAL)
        sizer_6.Add(sizer_19, 1, wx.EXPAND, 0)

        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        sizer_19.Add(sizer_22, 1, wx.ALL | wx.EXPAND, 0)

        label_7 = wx.StaticText(self.panel_zlRep, wx.ID_ANY, _("tip :"))
        sizer_22.Add(label_7, 0, 0, 0)

        self.zHtml_RightTip = wx.html2.WebView.New(self.panel_zlRep, wx.ID_ANY)
        sizer_22.Add(self.zHtml_RightTip, 1, wx.EXPAND, 0)

        sizer_23 = wx.BoxSizer(wx.VERTICAL)
        sizer_19.Add(sizer_23, 1, wx.EXPAND, 0)

        self.sizer_NoteToolbar = wx.BoxSizer(wx.HORIZONTAL)
        sizer_23.Add(self.sizer_NoteToolbar, 0, wx.EXPAND, 0)

        label_8 = wx.StaticText(self.panel_zlRep, wx.ID_ANY, _("Note : "))
        self.sizer_NoteToolbar.Add(label_8, 0, 0, 0)

        self.panel_Notebar = wx.Panel(self.panel_zlRep, wx.ID_ANY)
        self.sizer_NoteToolbar.Add(self.panel_Notebar, 1, wx.EXPAND, 0)

        self.sizer_Notebar = wx.BoxSizer(wx.HORIZONTAL)

        self.panel_Note = wx.Panel(self.panel_zlRep, wx.ID_ANY)
        sizer_23.Add(self.panel_Note, 1, wx.EXPAND, 0)

        self.sizer_Note = wx.BoxSizer(wx.VERTICAL)

        self.edNote = GuiPreDef.MyRichText(self.panel_Note, style=wx.VSCROLL)
        self.sizer_Note.Add(self.edNote, 1, wx.EXPAND, 0)

        self.panel_Note.SetSizer(self.sizer_Note)

        self.panel_Notebar.SetSizer(self.sizer_Notebar)

        self.panel_zlRep.SetSizer(self.sizer_zlRep)

        self.panelMsg.SetSizer(sizer_13)

        self.panel_test.SetSizer(sizer_5)

        sizer_3.AddGrowableCol(0)
        sizer_3.AddGrowableCol(1)
        sizer_3.AddGrowableCol(2)
        sizer_3.AddGrowableCol(3)
        sizer_3.AddGrowableCol(4)
        sizer_3.AddGrowableCol(5)
        sizer_3.AddGrowableCol(6)
        sizer_3.AddGrowableCol(7)
        sizer_3.AddGrowableCol(8)
        sizer_3.AddGrowableCol(9)
        sizer_3.AddGrowableCol(10)
        sizer_3.AddGrowableCol(11)
        sizer_3.AddGrowableCol(12)
        sizer_3.AddGrowableCol(13)
        sizer_3.AddGrowableCol(14)
        sizer_3.AddGrowableCol(15)
        sizer_3.AddGrowableCol(16)
        sizer_3.AddGrowableCol(17)
        self.panel_2.SetSizer(sizer_3)

        self.panelDown.SetSizer(sizer_2)

        self.panel_6.SetSizer(sizer_18)

        self.panel_5.SetSizer(sizer_17)

        self.panelWave.SetSizer(sizer_4)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()

        self.btnPlay.Bind(wx.EVT_TOGGLEBUTTON, self.onBtnPlay)
        self.edLeft.Bind(wx.EVT_TEXT, self.onEd4_Changed)
        self.edRight.Bind(wx.EVT_TEXT, self.onEd4_Changed)
        self.edTop.Bind(wx.EVT_TEXT, self.onEd4_Changed)
        self.edBottom.Bind(wx.EVT_TEXT, self.onEd4_Changed)
        # end wxGlade

    def mnFileOpen(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnFileOpen' not implemented!")
        event.Skip()

    def mnNextFile(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnNextFile' not implemented!")
        event.Skip()

    def mnSetSnte_all(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnSetSnte_all' not implemented!")
        event.Skip()

    def mnSetSnte_MainSntes(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnSetSnte_MainSntes' not implemented!")
        event.Skip()

    def mnSetSnte_SubSntes(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnSetSnte_SubSntes' not implemented!")
        event.Skip()

    def mnSetSnte_CopySntes(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'mnSetSnte_CopySntes' not implemented!")
        event.Skip()

    def onBtnPlay(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'onBtnPlay' not implemented!")
        event.Skip()

    def onEd4_Changed(self, event):  # wxGlade: FmMain.<event_handler>
        print("Event handler 'onEd4_Changed' not implemented!")
        event.Skip()

# end of class FmMain

class MyToolBar(wx.ToolBar):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyToolBar.__init__
        kwds["style"] = kwds.get("style", 0)
        wx.ToolBar.__init__(self, *args, **kwds)
        self.Realize()
        # end wxGlade

# end of class MyToolBar

class FmSpdCnt(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: FmSpdCnt.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.FRAME_FLOAT_ON_PARENT | wx.FRAME_NO_TASKBAR | wx.FRAME_TOOL_WINDOW
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle(_("frame_1"))

        self.sizer_top = wx.BoxSizer(wx.VERTICAL)

        self.panel_top = wx.Panel(self, wx.ID_ANY)
        self.sizer_top.Add(self.panel_top, 0, 0, 0)

        self.sizer_frame = wx.BoxSizer(wx.VERTICAL)

        self.zHtml = wx.html.HtmlWindow(self.panel_top, wx.ID_ANY)
        self.zHtml.SetMinSize((-1, 40))
        self.sizer_frame.Add(self.zHtml, 0, wx.EXPAND, 0)

        grid_sizer_2 = wx.FlexGridSizer(4, 3, 0, 0)
        self.sizer_frame.Add(grid_sizer_2, 0, wx.ALL, 0)

        self.btnDel = wx.Button(self.panel_top, wx.ID_ANY, _("button_1"), style=wx.BU_LEFT)
        self.btnDel.SetMinSize((180, 67))
        self.btnDel.SetBitmap(wx.Bitmap("icons\\key_Del+CL.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnDel, 0, 0, 0)

        self.btnEnd = wx.Button(self.panel_top, wx.ID_ANY, _("button_1"), style=wx.BU_LEFT)
        self.btnEnd.SetMinSize((180, 67))
        self.btnEnd.SetBitmap(wx.Bitmap("icons/key_End+CL.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnEnd, 0, 0, 0)

        bmp = wx.Bitmap("icons/key_Del.png", wx.BITMAP_TYPE_ANY)
        self.btnDel_DemoRef = Buttons.GenBitmapTextButton(self.panel_top, bitmap=bmp, label='test_BTN')
        self.btnDel_DemoRef.Hide()
        grid_sizer_2.Add(self.btnDel_DemoRef, 0, wx.EXPAND, 0)

        grid_sizer_2.Add((20, 20), 0, 0, 0)

        grid_sizer_2.Add((20, 20), 0, 0, 0)

        grid_sizer_2.Add((20, 20), 0, 0, 0)

        grid_sizer_2.Add((20, 20), 0, 0, 0)

        self.btnUp = wx.Button(self.panel_top, wx.ID_ANY, _("button_1_long"), style=wx.BU_LEFT)
        self.btnUp.SetMinSize((180, 67))
        self.btnUp.SetBitmap(wx.Bitmap("icons/key_Up+CL.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnUp, 0, 0, 0)

        grid_sizer_2.Add((20, 20), 0, 0, 0)

        self.btnLeft = wx.Button(self.panel_top, wx.ID_ANY, _("button_1"), style=wx.BU_LEFT)
        self.btnLeft.SetMinSize((180, 67))
        self.btnLeft.SetBitmap(wx.Bitmap("icons/key_Left.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnLeft, 0, 0, 0)

        self.btnDown = wx.Button(self.panel_top, wx.ID_ANY, _("button_1"), style=wx.BU_LEFT)
        self.btnDown.SetMinSize((180, 67))
        self.btnDown.SetBitmap(wx.Bitmap("icons/key_Down+CL.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnDown, 0, 0, 0)

        self.btnRight = wx.Button(self.panel_top, wx.ID_ANY, _("button_1"), style=wx.BU_LEFT)
        self.btnRight.SetMinSize((180, 67))
        self.btnRight.SetBitmap(wx.Bitmap("icons/key_Right.png", wx.BITMAP_TYPE_ANY))
        grid_sizer_2.Add(self.btnRight, 0, 0, 0)

        self.panel_top.SetSizer(self.sizer_frame)

        self.SetSizer(self.sizer_top)
        self.sizer_top.Fit(self)

        self.Layout()

        self.btnDel.Bind(wx.EVT_BUTTON, self.onBtnDel)
        self.btnEnd.Bind(wx.EVT_BUTTON, self.onBtnEnd)
        self.btnDel_DemoRef.Bind(wx.EVT_BUTTON, self.onBtnDel)
        self.btnUp.Bind(wx.EVT_BUTTON, self.onBtnUp)
        self.btnLeft.Bind(wx.EVT_BUTTON, self.onBtnLeft)
        self.btnDown.Bind(wx.EVT_BUTTON, self.onBtnDown)
        self.btnRight.Bind(wx.EVT_BUTTON, self.onBtnRight)
        # end wxGlade

    def onBtnDel(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnDel' not implemented!")
        event.Skip()

    def onBtnEnd(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnEnd' not implemented!")
        event.Skip()

    def onBtnUp(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnUp' not implemented!")
        event.Skip()

    def onBtnLeft(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnLeft' not implemented!")
        event.Skip()

    def onBtnDown(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnDown' not implemented!")
        event.Skip()

    def onBtnRight(self, event):  # wxGlade: FmSpdCnt.<event_handler>
        print("Event handler 'onBtnRight' not implemented!")
        event.Skip()

# end of class FmSpdCnt
